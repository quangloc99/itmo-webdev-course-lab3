<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:c="http://java.sun.com/jstl/core"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui"
      xmlns:custom="http://java.sun.com/jsf/composite/custom-components"
>
<h:head>
    <h:outputStylesheet name="css/animation.css"/>
    <style>
        /* TODO add this to a css file */
        .selected-row {
            background-color: #059eff !important;
        }
    </style>
</h:head>

<h:body>
    <h:form>
        <h:panelGroup id="input-animation-values">
            <style type="text/css">
                :root {
                    --input-ani-r: #{app.editor.r};
                    --input-ani-x: #{app.editor.x};
                }

                svg [id^=input-point-for] {
                    opacity: 0;
                }
            </style>

            <ui:repeat var="val" value="#{app.editor.generateQueries()}">
                <style>
                    #input-point-for_#{val.y.toString().replace('.', '-')} {
                        opacity: 1;
                    }
                </style>
            </ui:repeat>
        </h:panelGroup>
        <c:set var="fieldNameColSize" value="2"/>
        <c:set var="inputColSize" value="4"/>
        <c:set var="messageColSize" value="6"/>

        <div class="ui-g">
            <div class="ui-g-#{fieldNameColSize}">X</div>
            <div class="ui-g-#{messageColSize}">
                <h:message id="input-x-message" for="input-x"/>
            </div>
            <div class="ui-g-#{inputColSize}">
                <p:inputText id="input-x" value="#{app.editor.x}"
                             required="true"
                             requiredMessage="field required"
                             converterMessage="must be number between #{variantData.xRange.low} and #{variantData.xRange.high}"
                             validatorMessage="must be number between #{variantData.xRange.low} and #{variantData.xRange.high}"
                >
                    <f:validateDoubleRange minimum="#{variantData.xRange.low}" maximum="#{variantData.xRange.high}"/>
                    <f:converter converterId="javax.faces.Double" />
                    <p:ajax event="keyup" update="input-x-message, input-animation-values" validateClient="true"/>
                </p:inputText>
            </div>
        </div>

        <div class="ui-g">
            <div class="ui-g-#{fieldNameColSize}">Y</div>
            <div class="ui-g-#{messageColSize}"></div>
            <div class="ui-g-#{inputColSize}">
                <c:forEach var="val" items="#{variantData.yRange.listRepresentation}">
                    <p:selectBooleanCheckbox itemLabel="#{val}" value="#{app.editor.y[val]}">
                        <p:ajax update="input-animation-values"/>
                    </p:selectBooleanCheckbox>
                </c:forEach>
            </div>
        </div>

        <div class="ui-g">
            <div class="ui-g-#{fieldNameColSize}">R</div>
            <div class="ui-g-#{messageColSize}"></div>
            <div class="ui-g-#{inputColSize}">
                <p:selectOneMenu value="#{app.editor.r}">
                    <c:forEach var="val" items="#{variantData.rRange.listRepresentation}">
                        <f:selectItem itemLabel="#{val}" itemValue="#{val}"/>
                    </c:forEach>

                    <p:ajax update="input-animation-values" />
                </p:selectOneMenu>
            </div>
        </div>

        <p:commandButton value="submit"
                         actionListener="#{app.addGeneratedQueriesToDB}"
                         update="input-x-message, queries-table"/>

        <br/>
        <p:commandButton value="delete"  actionListener="#{app.deleteAllQueries}" update="queries-table"/>

    </h:form>

    <custom:hitting-area-graph-template r="var(--input-ani-r)" maxR="6" fill="red" width="500" height="500">
        <c:forEach var="val" items="#{variantData.yRange.listRepresentation}">
            <custom:hitting-area-point x="var(--input-ani-x)" y="#{val}"
                                       id="input-point-for_#{val.toString().replace('.', '-')}"/>
        </c:forEach>
    </custom:hitting-area-graph-template>

    <p:dataTable id="queries-table"
                 value="#{app.allQueries}"
                 var="o"
                 rowStyleClass="#{app.displayingQuery.id eq o.id ? 'selected-row' : ''}"
    >
        <p:column headerText="Click to display">
            <p:commandButton value="display" update="queries-table">
                <f:setPropertyActionListener target="#{app.displayingQuery}" value="#{o}"/>
            </p:commandButton>
        </p:column>
        <p:column headerText="x"> #{o.x} </p:column>
        <p:column headerText="y"> #{o.y} </p:column>
        <p:column headerText="r"> #{o.r} </p:column>
        <p:column headerText="Result"> #{o.hit} </p:column>
    </p:dataTable>

</h:body>

</html>
